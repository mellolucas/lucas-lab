name: Dispatch Test
run-name: >-
  ${{ github.workflow }}
  ${{ format('(1:{0}; 2:{1};)', inputs.first-input, inputs.second-input) }}

on:
  workflow_dispatch:
    inputs:
      first-input:
        description: "My first input"
        required: false
        type: string
      second-input:
        description: "My second input"
        required: false
        type: string
      break:
        description: "Break the workflow"
        required: false
        type: boolean
        default: false

env:
  FIRST_INPUT: ${{ inputs.first-input }}
  SECOND_INPUT: ${{ inputs.second-input }}

jobs:
  test-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Print context
        env:
          GH_CONTEXT: ${{ toJSON(github) }}
          GH_INPUTS: ${{ toJSON(inputs) }}
          GH_RUNNER: ${{ toJSON(runner) }}
        run: |
          echo "::group::Inputs toJSON (raw block deserialized):"
          jq . <<< "${GH_INPUTS}"
          echo "::endgroup::"
          echo
          echo "---"
          echo
          echo "::group::GitHub context toJSON:"
          jq . <<< "${GH_CONTEXT}"
          echo "::endgroup::"
          echo
          echo "---"
          echo
          echo "::group::Runner context toJSON:"
          jq . <<< "${GH_RUNNER}"
          echo "::endgroup::"
          echo

      - name: Run test
        env:
          FIRST_INPUT_EXISTS: ${{ inputs.first-input != 0 && true || false }}
          SECOND_INPUT_EXISTS: ${{ inputs.second-input == 1 && 1 || 0 }}
        run: |
          echo "---       1       ---"
          echo "First input raw:"
          echo "${{ inputs.first-input }}"
          echo
          echo "First input fromenv:"
          echo "${{ env.FIRST_INPUT }}"
          echo
          echo
          echo
          echo "---       2       ---"
          echo "Second input raw:"
          echo "${{ inputs.second-input }}"
          echo
          echo "Second input fromenv:"
          echo "${{ env.SECOND_INPUT }}"
          echo
          echo
          echo "---      ---      ---"
          ${{ inputs.break == 1 && true || false }} && exit 1 || true
          echo






