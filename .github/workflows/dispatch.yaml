name: Dispatch Test
run-name: >-
  ${{ github.workflow }}
  ${{ format('(1:{0}; 2:{1};)', inputs.first-input, inputs.second-input) }}

on:
  workflow_dispatch:
    inputs:
      first-input:
        description: "My first input"
        required: false
        type: string
      second-input:
        description: "My second input"
        required: false
        type: string
      break:
        description: "Break the workflow"
        required: false
        type: boolean
        default: false

env:
  FIRST_INPUT: ${{ inputs.first-input }}
  SECOND_INPUT: ${{ inputs.second-input }}

jobs:
  test-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Run test
        env:
          DEBIAN_FRONTEND: >-
            ${{
              inputs.first-input != 0 && inputs.first-input || ''
            }}
        run: |
          echo "check result of empty input or inexistent file are the same: "
          echo ${{ hashFiles(inputs.first-input) }}
          echo ${{ inputs.first-input }}
          echo ${{ hashFiles(inputs.first-input) == 0 && 'empty' || 'notfalse' }}
          echo ${{ inputs.first-input == 0 && 'empty' || 'notfalse' }}  
          echo 
          echo create file and ls
          echo 
          echo asdasdasd > ${{ inputs.first-input }}
          ls
          echo hashfile relative ${{ hashFiles('./myfile') }}
          echo hashfile absolute ${{ hashFiles('/myfile') }}
          echo
          echo "check result of empty input or inexistent file are the same: "
          echo ${{ hashFiles(inputs.first-input) }}
          echo ${{ inputs.first-input }}
          echo ${{ hashFiles(inputs.first-input) == 0 && 'empty' || 'notfalse' }}
          echo ${{ inputs.first-input == 0 && 'empty' || 'notfalse' }}  
          echo
          echo ${{ hashFiles(inputs.second-input) }}
          echo ${{ inputs.second-input }}
          echo ${{ hashFiles(inputs.second-input) == 0 && 'empty' || 'notfalse' }}
          echo ${{ inputs.second-input == 0 && 'empty' || 'notfalse' }}  
          echo
          echo "Inputs toJSON (raw block deserialized):"
          echo "${{ toJSON(inputs) }}"
          echo
          echo
          echo "---       1       ---"
          echo "First input raw:"
          echo "${{ inputs.first-input }}"
          echo
          echo "First input fromenv:"
          echo "${{ env.FIRST_INPUT }}"
          echo
          echo
          echo
          echo "---       2       ---"
          echo "Second input raw:"
          echo "${{ inputs.second-input }}"
          echo
          echo "Second input fromenv:"
          echo "${{ env.SECOND_INPUT }}"
          echo
          echo
          echo "---      ---      ---"
          ${{ inputs.break == 1 && true || false }} && exit 1 || true
          echo




